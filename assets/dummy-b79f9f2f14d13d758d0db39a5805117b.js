"use strict";define("dummy/app",["exports","ember","ember-load-initializers","dummy/config/environment","dummy/resolver"],function(e,n,r,t,a){var o=n.default.Application,p=void 0;n.default.MODEL_FACTORY_INJECTIONS=!0,p=o.extend({modulePrefix:t.default.modulePrefix,podModulePrefix:t.default.podModulePrefix,Resolver:a.default}),(0,r.default)(p,t.default.modulePrefix),e.default=p}),define("dummy/components/code-block",["exports","ember-prism/components/code-block"],function(e,n){e.default=n.default}),define("dummy/components/code-inline",["exports","ember-prism/components/code-inline"],function(e,n){e.default=n.default}),define("dummy/controllers/array",["exports","ember"],function(e,n){e.default=n.default.Controller}),define("dummy/controllers/object",["exports","ember"],function(e,n){e.default=n.default.Controller}),define("dummy/fixtures/contributors",["exports"],function(e){e.default=[{id:"422902",name:"Matthew Dahl",username:"sandersky"},{id:"18398999",name:"sdesros",username:"sdesros"},{id:"8236686",name:"Michael Carroll",username:"juwara0"},{id:"2244653",name:"Phil Nachum",username:"pnachum"},{id:"9026198",name:"Steven Glanzer",username:"sglanzer"},{id:"9057680",name:"Eric White",username:"EWhite613"},{id:"1192053",name:"Ian Storz",username:"ianstarz"},{id:"35697",name:"Justin Bowes",username:"justinbowes"},{id:"411788",name:"Adam Meadows",username:"job13er"}]}),define("dummy/fixtures/validators",["exports"],function(e){e.default=[{description:"Property can be of any type.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.any,\n    baz: PropTypes.any.isRequired,\n    foo: PropTypes.any({required: true}),\n    spam: PropTypes.any({updatable: false})\n  }\n})\n    ",name:"any"},{description:"Property must be an array.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.array,\n    baz: PropTypes.array.isRequired,\n    foo: PropTypes.array({required: true}),\n    spam: PropTypes.array({updatable: false})\n  }\n})\n    ",name:"array"},{description:"Property must be an array of given type.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.arrayOf(PropTypes.string),\n    baz: PropTypes.arrayOf(PropTypes.string).isRequired,\n    foo: PropTypes.arrayOf(PropTypes.string, {required: true}),\n    spam: PropTypes.arrayOf(PropTypes.string, {updatable: false})\n  }\n})\n    ",name:"arrayOf"},{description:"Property must be a boolean.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.bool,\n    baz: PropTypes.bool.isRequired,\n    foo: PropTypes.bool({required: true}),\n    spam: PropTypes.bool({updatable: false})\n  }\n})\n    ",name:"bool"},{description:"Property must be an instance of Element.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.element,\n    baz: PropTypes.element.isRequired,\n    foo: PropTypes.element({required: true}),\n    spam: PropTypes.element({updatable: false})\n  }\n})\n    ",name:"element"},{description:"Property must be from {{component}} helper.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.EmberComponent,\n    baz: PropTypes.EmberComponent.isRequired,\n    foo: PropTypes.EmberComponent({required: true}),\n    spam: PropTypes.EmberComponent({updatable: false})\n  }\n})\n    ",hbs:"\n{{my-component\n  bar={{component 'foo-bar'}}\n  baz={{component 'foo-bar' 'test' 'spam'}}\n  foo={{component prop1='test' prop2='spam'}}\n}}\n    ",name:"EmberComponent"},{description:"Property must be an Ember.Object.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.EmberObject,\n    baz: PropTypes.EmberObject.isRequired,\n    foo: PropTypes.EmberObject({required: true}),\n    spam: PropTypes.EmberObject({updatable: false})\n  }\n})\n    ",name:"EmberObject"},{description:"Property must be a function.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.func,\n    baz: PropTypes.func.isRequired,\n    foo: PropTypes.func({required: true}),\n    spam: PropTypes.func({updatable: false})\n  }\n})\n    ",name:"func"},{description:"Property must be an instance of given class.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.instanceOf(HTMLElement),\n    baz: PropTypes.instanceOf(HTMLElement).isRequired\n    foo: PropTypes.instanceOf(HTMLElement, {required: true}),\n    spam: PropTypes.instanceOf(HTMLElement, {updatable: false})\n  }\n})\n    ",name:"instanceOf"},{description:"Property must be null. This is typically useful in conjunction with oneOfType.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.oneOfType([\n      PropTypes.null,\n      PropTypes.string\n    ])\n  }\n})\n    ",name:"null"},{description:"Property must be a number.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.number,\n    baz: PropTypes.number.isRequired,\n    foo: PropTypes.number({required: true}),\n    spam: PropTypes.number({updatable: false})\n  }\n})\n    ",name:"number"},{description:"Property must be an object.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.object,\n    baz: PropTypes.object.isRequired,\n    foo: PropTypes.object({required: true}),\n    spam: PropTypes.object({updatable: false})\n  }\n})\n    ",name:"object"},{description:"Property value must be in set of possible values.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.oneOf(['bar', 'baz']),\n    baz: PropTypes.oneOf(['bar', 'baz']).isRequired,\n    foo: PropTypes.oneOf(\n      [\n        'bar',\n        'baz'\n      ],\n      {\n        required: true\n      }\n    ),\n    spam: PropTypes.oneOf(\n      [\n        'bar',\n        'baz'\n      ],\n      {\n        updatable: false\n      }\n    )\n  }\n})\n    ",name:"oneOf"},{description:"Property type must be in set of possible types.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.oneOfType([\n      PropTypes.null,\n      PropTypes.string\n    ]),\n    baz: PropTypes.oneOfType([\n      PropTypes.null,\n      PropTypes.string\n    ]).isRequired,\n    foo: PropTypes.oneOfType(\n      [\n        PropTypes.null,\n        PropTypes.string\n      ],\n      {\n        required: true\n      }\n    ),\n    spam: PropTypes.oneOfType(\n      [\n        PropTypes.null,\n        PropTypes.string\n      ],\n      {\n        updatable: false\n      }\n    )\n  }\n})\n    ",name:"oneOfType"},{description:"Property must be an Object of the given shape.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.shape({\n      bar: PropTypes.number.isRequired,\n      baz: PropTypes.string\n    }),\n    baz: PropTypes.shape({\n      bar: PropTypes.number.isRequired,\n      baz: PropTypes.string\n    }).isRequired,\n    foo: PropTypes.shape(\n      {\n        bar: PropTypes.number.isRequired,\n        baz: PropTypes.string\n      },\n      {\n        required: true\n      }\n    ),\n    spam: PropTypes.shape(\n      {\n        bar: PropTypes.number.isRequired,\n        baz: PropTypes.string\n      },\n      {\n        updatable: false\n      }\n    )\n  }\n})\n    ",name:"shape"},{description:"Property must be a string.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.string,\n    baz: PropTypes.string.isRequired,\n    foo: PropTypes.string({required: true}),\n    spam: PropTypes.string({updatable: false})\n  }\n})\n    ",name:"string"},{description:"Property must be a symbol.",example:"\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    bar: PropTypes.symbol,\n    baz: PropTypes.symbol.isRequired,\n    foo: PropTypes.symbol({required: true}),\n    spam: PropTypes.symbol({updatable: false})\n  }\n})\n    ",name:"symbol"}]}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment"],function(e,n,r){function t(){return a}e.appVersion=t;var a=r.default.APP.version;e.default=n.default.Helper.helper(t)}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,n){e.default=n.default}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,n){e.default=n.default}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,n,r){var t=r.default.APP,a=t.name,o=t.version;e.default={name:"App Version",initialize:(0,n.default)(a,o)}}),define("dummy/initializers/component-prop-types",["exports","ember-prop-types/initializers/component-prop-types"],function(e,n){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return n.default}}),Object.defineProperty(e,"initialize",{enumerable:!0,get:function(){return n.initialize}})}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,n){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",n.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,n){e.default={name:"data-adapter",before:"store",initialize:n.default.K}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,n,r){e.default={name:"ember-data",initialize:n.default}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,n,r){function t(){var e=arguments[1]||arguments[0];if(r.default.exportApplicationGlobal!==!1){var t;if("undefined"!=typeof window)t=window;else if("undefined"!=typeof global)t=global;else{if("undefined"==typeof self)return;t=self}var a,o=r.default.exportApplicationGlobal;a="string"==typeof o?o:n.default.String.classify(r.default.modulePrefix),t[a]||(t[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete t[a]}}))}}e.initialize=t,e.default={name:"export-application-global",initialize:t}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,n){e.default={name:"injectStore",before:"store",initialize:n.default.K}}),define("dummy/initializers/store",["exports","ember"],function(e,n){e.default={name:"store",after:"ember-data",initialize:n.default.K}}),define("dummy/initializers/transforms",["exports","ember"],function(e,n){e.default={name:"transforms",before:"store",initialize:n.default.K}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,n){e.default={name:"ember-data",initialize:n.default}}),define("dummy/resolver",["exports","ember-resolver"],function(e,n){e.default=n.default}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,n,r){var t=n.default.Router,a=t.extend({location:r.default.locationType});a.map(function(){}),e.default=a}),define("dummy/routes/application",["exports","ember","dummy/fixtures/contributors","dummy/fixtures/validators"],function(e,n,r,t){var a=n.default.Route,o="\nimport Ember from 'ember'\nconst {Component} = Ember\nimport PropTypeMixin, {PropTypes} from 'ember-prop-types'\n\nexport default Component.extend(PropTypeMixin, {\n  propTypes: {\n    baz: PropTypes.number,\n    foo: PropTypes.string\n  },\n\n  getDefaultProps () {\n    return {\n      baz: 1,\n      foo: 'bar'\n    }\n  }\n})\n\n",p="\n'ember-prop-types': {\n  // Validate properties coming from a spread property (default is undefined)\n  spreadProperty: 'options',\n\n  // Throw errors instead of logging warnings (default is false)\n  throwErrors: true,\n\n  // Validate properties (default is true for all environments except \"production\")\n  validate: true,\n\n  // Validate properties when they are updated (default is false)\n  validateOnUpdate: true\n}\n";e.default=a.extend({model:function(){return{config:p,contributors:r.default,defaultsExample:o,validators:t.default}}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template(function(){var e=function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:23,column:2},end:{line:23,column:55}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createComment("");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(1);return t[0]=e.createMorphAt(n,0,0,r),e.insertBoundary(n,0),e.insertBoundary(n,null),t},statements:[["content","model.config",["loc",[null,[23,39],[23,55]]],0,0,0,0]],locals:[],templates:[]}}(),n=function(){var e=function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:34,column:6},end:{line:34,column:64}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createComment("");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(1);return t[0]=e.createMorphAt(n,0,0,r),e.insertBoundary(n,0),e.insertBoundary(n,null),t},statements:[["content","validator.example",["loc",[null,[34,43],[34,64]]],0,0,0,0]],locals:[],templates:[]}}(),n=function(){var e=function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:37,column:8},end:{line:37,column:62}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createComment("");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(1);return t[0]=e.createMorphAt(n,0,0,r),e.insertBoundary(n,0),e.insertBoundary(n,null),t},statements:[["content","validator.hbs",["loc",[null,[37,45],[37,62]]],0,0,0,0]],locals:[],templates:[]}}();return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:35,column:6},end:{line:38,column:6}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createTextNode("        ");e.appendChild(n,r);var r=e.createElement("h4"),t=e.createTextNode("Consumption in Templae");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n        ");e.appendChild(n,r);var r=e.createComment("");e.appendChild(n,r);var r=e.createTextNode("\n");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(1);return t[0]=e.createMorphAt(n,3,3,r),t},statements:[["block","code-block",[],["language","handlebars"],0,null,["loc",[null,[37,8],[37,77]]]]],locals:[],templates:[e]}}();return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:29,column:2},end:{line:40,column:2}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:1,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createTextNode("    ");e.appendChild(n,r);var r=e.createElement("section"),t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createElement("dt"),a=e.createComment("");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createElement("dl"),a=e.createComment("");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createElement("h4"),a=e.createTextNode("Component Definition");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t);var t=e.createTextNode("\n");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t);var t=e.createTextNode("    ");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=e.childAt(n,[1]),a=new Array(4);return a[0]=e.createMorphAt(e.childAt(t,[1]),0,0),a[1]=e.createMorphAt(e.childAt(t,[3]),0,0),a[2]=e.createMorphAt(t,7,7),a[3]=e.createMorphAt(t,9,9),a},statements:[["content","validator.name",["loc",[null,[31,10],[31,28]]],0,0,0,0],["content","validator.description",["loc",[null,[32,10],[32,35]]],0,0,0,0],["block","code-block",[],["language","javascript"],0,null,["loc",[null,[34,6],[34,79]]]],["block","if",[["get","validator.hbs",["loc",[null,[35,12],[35,25]]],0,0,0,0]],[],1,null,["loc",[null,[35,6],[38,13]]]]],locals:["validator"],templates:[e,n]}}(),r=function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:49,column:4},end:{line:49,column:66}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createComment("");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(1);return t[0]=e.createMorphAt(n,0,0,r),e.insertBoundary(n,0),e.insertBoundary(n,null),t},statements:[["content","model.defaultsExample",["loc",[null,[49,41],[49,66]]],0,0,0,0]],locals:[],templates:[]}}(),t=function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:56,column:2},end:{line:67,column:2}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:1,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createTextNode("    ");e.appendChild(n,r);var r=e.createElement("a"),t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createElement("img");e.appendChild(r,t);var t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createElement("br");e.appendChild(r,t);var t=e.createTextNode("\n      ");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t);var t=e.createTextNode("\n    ");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=e.childAt(n,[1]),a=e.childAt(t,[1]),o=new Array(4);return o[0]=e.createAttrMorph(t,"href"),o[1]=e.createAttrMorph(a,"alt"),o[2]=e.createAttrMorph(a,"src"),o[3]=e.createMorphAt(t,5,5),o},statements:[["attribute","href",["subexpr","concat",["https://github.com/",["get","contributor.username",["loc",[null,[58,42],[58,62]]],0,0,0,0]],[],["loc",[null,[null,null],[58,64]]],0,0],0,0,0,0],["attribute","alt",["get","contributor.username",["loc",[null,[61,14],[61,34]]],0,0,0,0],0,0,0,0],["attribute","src",["subexpr","concat",["https://avatars3.githubusercontent.com/u/",["get","contributor.id",["loc",[null,[62,65],[62,79]]],0,0,0,0]],[],["loc",[null,[null,null],[62,81]]],0,0],0,0,0,0],["content","contributor.name",["loc",[null,[65,6],[65,26]]],0,0,0,0]],locals:["contributor"],templates:[]}}();return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:1,column:0},end:{line:69,column:0}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createElement("div");e.setAttribute(r,"class","flex header");var t=e.createTextNode("\n  ");e.appendChild(r,t);var t=e.createElement("h1"),a=e.createTextNode("ember-prop-types");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n  ");e.appendChild(r,t);var t=e.createElement("a");e.setAttribute(t,"href","https://github.com/ciena-blueplanet/ember-prop-types/blob/master/LICENSE.md");var a=e.createTextNode("\n    ");e.appendChild(t,a);var a=e.createElement("img");e.setAttribute(a,"alt","MIT License"),e.setAttribute(a,"src","mit-d9d55730279d560591b31d4b0aab52b2.png"),e.appendChild(t,a);var a=e.createTextNode("\n  ");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n  ");e.appendChild(r,t);var t=e.createElement("a");e.setAttribute(t,"href","https://github.com/ciena-blueplanet/ember-prop-types");var a=e.createTextNode("\n    ");e.appendChild(t,a);var a=e.createElement("img");e.setAttribute(a,"alt","Github"),e.setAttribute(a,"src","octocat-e020986dbdafe5c1e97be521f17a28d8.png"),e.appendChild(t,a);var a=e.createTextNode("\n  ");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("p"),t=e.createTextNode("\n  This project aims to improve the developer experience of property management within Ember\n  apps and addons by implementing the entire React proptype API with a few additional\n  validators. By using ");e.appendChild(r,t);var t=e.createElement("em"),a=e.createTextNode("ember-prop-types");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode(" a developer is informed when a property\n  being fed to a component is not of the expected type, as well as allows a developer to group\n  all default property values under a single method.\n");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("p"),t=e.createTextNode("\n  ");e.appendChild(r,t);var t=e.createElement("em"),a=e.createTextNode("ember-prop-types");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode(" comes with a few configuration options which can be set in ");e.appendChild(r,t);var t=e.createElement("em"),a=e.createTextNode("config/environment.js");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n  for all environments or specific environments. Below is an example configuration with comments as to what each\n  option is for:\n  ");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t);var t=e.createTextNode("\n");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("h2"),t=e.createTextNode("Validators");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("div");e.setAttribute(r,"class","flex");var t=e.createTextNode("\n");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("h2"),t=e.createTextNode("Default Values");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("div");e.setAttribute(r,"class","flex");var t=e.createTextNode("\n  ");e.appendChild(r,t);var t=e.createElement("section"),a=e.createTextNode("\n    ");e.appendChild(t,a);var a=e.createElement("dt"),o=e.createTextNode("getDefaultProps()");e.appendChild(a,o),e.appendChild(t,a);var a=e.createTextNode("\n    ");e.appendChild(t,a);var a=e.createElement("dl"),o=e.createTextNode("Method to get default property values.");e.appendChild(a,o),e.appendChild(t,a);var a=e.createTextNode("\n    ");e.appendChild(t,a);var a=e.createComment("");e.appendChild(t,a);var a=e.createTextNode("\n  ");e.appendChild(t,a),e.appendChild(r,t);var t=e.createTextNode("\n");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("h2"),t=e.createTextNode("Contributors");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n\n");e.appendChild(n,r);var r=e.createElement("div");e.setAttribute(r,"class","contributors flex");var t=e.createTextNode("\n");e.appendChild(r,t);var t=e.createComment("");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=new Array(4);return t[0]=e.createMorphAt(e.childAt(n,[4]),5,5),t[1]=e.createMorphAt(e.childAt(n,[8]),1,1),t[2]=e.createMorphAt(e.childAt(n,[12,1]),5,5),t[3]=e.createMorphAt(e.childAt(n,[16]),1,1),t},statements:[["block","code-block",[],["language","javascript"],0,null,["loc",[null,[23,2],[23,70]]]],["block","each",[["get","model.validators",["loc",[null,[29,10],[29,26]]],0,0,0,0]],[],1,null,["loc",[null,[29,2],[40,11]]]],["block","code-block",[],["language","javascript"],2,null,["loc",[null,[49,4],[49,81]]]],["block","each",[["get","model.contributors",["loc",[null,[56,10],[56,28]]],0,0,0,0]],[],3,null,["loc",[null,[56,2],[67,11]]]]],locals:[],templates:[e,n,r,t]}}())}),define("dummy/templates/components/code-block",["exports"],function(e){e.default=Ember.HTMLBars.template(function(){return{meta:{revision:"Ember@2.7.0",loc:{source:null,start:{line:1,column:0},end:{line:2,column:0}},moduleName:"dummy/templates/components/code-block.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var n=e.createDocumentFragment(),r=e.createElement("code"),t=e.createComment("");e.appendChild(r,t),e.appendChild(n,r);var r=e.createTextNode("\n");return e.appendChild(n,r),n},buildRenderNodes:function(e,n,r){var t=e.childAt(n,[0]),a=new Array(2);return a[0]=e.createAttrMorph(t,"class"),a[1]=e.createMorphAt(t,0,0),a},statements:[["attribute","class",["get","languageClass",["loc",[null,[1,14],[1,27]]],0,0,0,0],0,0,0,0],["content","yield",["loc",[null,[1,30],[1,39]]],0,0,0,0]],locals:[],templates:[]}}())}),define("dummy/config/environment",["ember"],function(e){var n="dummy";try{var r=n+"/config/environment",t=document.querySelector('meta[name="'+r+'"]').getAttribute("content"),a=JSON.parse(unescape(t)),o={default:a};return Object.defineProperty(o,"__esModule",{value:!0}),o}catch(e){throw new Error('Could not read config from meta tag with name "'+r+'".')}}),runningTests||require("dummy/app").default.create({name:"ember-prop-types",version:"3.9.0"});